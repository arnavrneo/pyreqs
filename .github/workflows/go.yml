# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main

      - name: pyreqs-test
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Dependencies
        run: go get .

      - name: Test
        run: |
          git clone https://github.com/ultralytics/ultralytics.git
          ls -la
          realpath ultralytics/
          go test -v ./...

      # Cross-platform builds
      - name: Build-linux-arm64
        run: env GOOS="linux" GOARCH="arm64" go build -o build/pyreqs-linux-arm64 .

      - name: Build-linux-amd64
        run: env GOOS="linux" GOARCH="amd64" go build -o build/pyreqs-linux-amd64 .

      - name: Build-darwin-arm64
        run: env GOOS="darwin" GOARCH="arm64" go build -o build/pyreqs-macos-arm64 .

      - name: Build-darwin-amd64
        run: env GOOS="darwin" GOARCH="amd64" go build -o build/pyreqs-macos-amd64 .

      - name: Build-windows-386
        run: env GOOS="windows" GOARCH="386" go build -o build/pyreqs-windows-386.exe .

      - name: Build-windows-amd64
        run: env GOOS="windows" GOARCH="amd64" go build -o build/pyreqs-windows-amd64.exe .

      - uses: actions/upload-artifact@v3
        with:
          name: pyreqs
          path: build/

  release:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    permissions:
      contents: write
    needs: build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: pyreqs
          path: build
      - uses: ncipollo/release-action@v1
        with:
          skipIfReleaseExists: true
          tag: v1.2
          artifacts: "build/*"